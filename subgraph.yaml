specVersion: 0.0.2
description: Gravatar for Ethereum lokeyBeef version for testing/exploring subgraphs
repository: https://github.com/graphprotocol/example-subgraph.git 
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Gravity
    network: mainnet
    source:
      address: '0x2E645469f354BB4F5c8a05B3b30A929361cf77eC'
      abi: Gravity
      #startBlock: 9999    #example if you want to add a start block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Gravatar
      abis:
        - name: Gravity
          file: ./abis/Gravity.json
      #callHandlers:        #Example if you want to add in call handler for function in contract createGravatar 
        #- function: createGravatar(string,string)
          #handler: handleCreateGravatar  
      #blockHandlers:       #Example of a block handler. 
        #- handler: handleBlock
        #- handler: handleBlockWithCallToContract
          #filter:          #adds a filter to only be called if block contains call to contract defined in dataSources
            #kind: call
      eventHandlers: #These are handlers defined. They must be present in mapping.ts and have the same name
        - event: NewGravatar(uint256,address,string,string)
          handler: handleNewGravatar   
        - event: UpdatedGravatar(uint256,address,string,string)
          handler: handleUpdatedGravatar
          #Example of processing anonymous event. 
        #- event: LogNote (bytes4,address,bytes32,bytes32,uint256,bytes) 
          #topic0: "0xbaa8529c00000000000000000000000000000000000000000000000000000000"
          #handler: handleGive  
      file: ./src/mapping.ts

      
      
#Example of dynamic datasource. 
#dataSources:  #this is the main contract
  #- kind: ethereum/contract
    #name: Factory
    #network: mainnet
    #source:
      #address: '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95'
      #abi: Factory
    #mapping:
      #kind: ethereum/events
      #apiVersion: 0.0.2
      #language: wasm/assemblyscript
      #file: ./src/mappings/factory.ts
      #entities:
        #- Directory
      #abis:
        #- name: Factory
          #file: ./abis/factory.json
      #eventHandlers:
        #- event: NewExchange(address,address) #Note this. Is emited when new exchange contract is created on chain by the factory contrac.t
          #handler: handleNewExchange #
#templates:             #this templates creates a template for subcontracts
  #- name: Exchange
    #kind: ethereum/contract
    #network: mainnet
    #source:            #Note under the source, no Address specified. 
      #abi: Exchange
    #mapping:
      #kind: ethereum/events
      #apiVersion: 0.0.1
      #language: wasm/assemblyscript
      #file: ./src/mappings/exchange.ts
      #entities:
        #- Exchange
      #abis:
        #- name: Exchange
          #file: ./abis/exchange.json
      #eventHandlers:
        #- event: TokenPurchase(address,uint256,uint256)
          #handler: handleTokenPurchase
        #- event: EthPurchase(address,uint256,uint256)
          #handler: handleEthPurchase
        #- event: AddLiquidity(address,uint256,uint256)
          #handler: handleAddLiquidity
        #- event: RemoveLiquidity(address,uint256,uint256)
          #handler: handleRemoveLiquidity
          
          
          
          
          
          
          
          
